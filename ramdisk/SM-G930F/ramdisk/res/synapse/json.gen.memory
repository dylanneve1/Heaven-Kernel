#!/system/bin/sh

# Busybox 
if [ -e /su/xbin/busybox ]; then
	BB=/su/xbin/busybox;
else if [ -e /sbin/busybox ]; then
	BB=/sbin/busybox;
else
	BB=/system/xbin/busybox;
fi;
fi;

cat << CTAG
{
    name:MEMORY,
    elements:[
	{ SLiveLabel:{
		title:"Memory State",
		refresh:1000,
		action:"live LiveMemory"
	}},
	{ SLiveLabel:{
		title:"Swap State",
		refresh:1000,
		action:"live LiveSwap"
	}},
	{ SSpacer:{
		height:1
	}},
			`if [ -f "/sys/module/lowmemorykiller/parameters/minfree" ]; then
				$BB echo '{ SPane:{
					title:"Low Memory Killer",
					description:"LMK Minfree controls how much memory each app type can hold, and is responsible for memory management for multi-tasking. All values are multiplied by 256 pages."
				}},
				{ SSpacer:{
					height:1
				}},
				{ SOptionList:{
					title:"Profile",
					description:"This option will auto-tune LMK minfree values as per selected profile. More aggressive equals more free RAM but more killed apps (less multi-tasking).\n",
					default:Default,
					action:"lmk profile",
					values:[ Low, Medium, Custom, Default, Aggressive, Exterminate,
					],
					notify:[
							{
								on:APPLY,
								do:[ REFRESH, APPLY ],
								to:[ 
										"lmk 1",
										"lmk 2",
										"lmk 3",
										"lmk 4",
										"lmk 5",
										"lmk 6"
								],
							}
					]
				}},
				{ SSpacer:{
					height:2
				}},'
					for LMK in 1 2 3 4 5 6; do
						$BB echo '{ SSeekBar:{ '
							case $LMK in
								1)
									$BB echo 'title:"Foreground App", description:"The application currenty on the screen and running.\n", default:72' ;;
								2)
									$BB echo 'title:"Visible App", description:"The application that is open and running in background.\n", default:90' ;;
								3)
									$BB echo 'title:"Secondary Server", description:"This is a service an application needs that is alive and ready.\n", default:108' ;;
								4)
									$BB echo 'title:"Hidden App", description:"An idle process that wakes up on application request.\n", default:126' ;;
								5)
									$BB echo 'title:"Content Provider", description:"Apps that provide data (content) to the system.\n", default:219' ;;
								6)
									$BB echo 'title:"Empty App", description:"Apps closed by the user but ready to run.\n", default:317' ;;
							esac
						$BB echo ', action:"lmk '${LMK}'",
						unit:" MB", min:1, max:350 }},'
						echo '{ SSpacer:{ height:1 }},'
					done
			fi`
	{ SSpacer:{
		height:2
	}},
	{ SPane:{
		title:"Samsung SPCM Service",
		description:"Enabling will allow the Samsung SPCM service to kill apps running in the background, but those only that haven't been used for a period of time. Disabling will revert to standard OOM killer and may help prevent apps/services meant to run in the background being killed (eg. Facebook and Swiftkey)."
	}},
	{ SSpacer:{
		height:1
	}},
	{ SOptionList:{
		title:"SPCM Service",
		description:" ",
		default:$(echo "$(/res/synapse/actions/devtools spcm_service)"),
		action:"devtools spcm_service",
		values:[Enabled, Disabled,]
	}},
	{ SSpacer:{
		height:2
	}},
	{ SPane:{
		title:"Ultra Kernel SamePage Merging (UKSM)",
		description:"Transparently scans and merges memory (duplicated pages) at a significantly improved scan speed & CPU efficiency over stock KSM."
	}},
	{ SSpacer:{
		height:1
	}},
	{ SOptionList:{
		title:"UKSM",
		description:" ",
		default:0,
		action:"generic /sys/kernel/mm/uksm/run",
		values:{
			0:"Disabled", 1:"Enabled"
		}
	}},
	{ SSpacer:{
		height:2
	}},
	{ SLiveLabel:{
                title:"Stats",
		description:"Memory samepage merging is not a quick process, so stats may initially show 0 MB.",
		refresh:3000,
		action:"live UKSMStats"
	}},
	{ SSpacer:{
		height:1
	}},
	{ SSeekBar:{
		title:"Scan Delay Interval",
		description:"Set how long the daemon sleeps before it wakes up and starts scanning memory pages.\n",
		unit:" sec",
		step:100,
		min:0,
		max:1000,
		weight:0.001,
		default:$(cat /sys/kernel/mm/uksm/sleep_millisecs),
		action:"generic /sys/kernel/mm/uksm/sleep_millisecs"
	}},
	{ SSpacer:{
		height:1
	}},
	{ SOptionList:{
		title:"Governor",
		description:"Controls how aggressively the daemon uses CPU power. This sets a preset for the maximum CPU consumption below.\n\n full = 18 % \n med = 12 %\n low = 7 %\n quiet = 1 %\n",
		default:$(cat /sys/kernel/mm/uksm/cpu_governor | $BB awk 'NR>1{print $1}' RS=[ FS=]),
		action:"UKSM_gov /sys/kernel/mm/uksm/cpu_governor",
		values:[`while read values; do $BB printf "%s, \n" $values | $BB tr -d '[]'; done < /sys/kernel/mm/uksm/cpu_governor`],
		notify:[
				{
					on:APPLY,
					do:[ REFRESH, APPLY ],
					to:[
						"generic /sys/kernel/mm/uksm/max_cpu_percentage"
					],
				}
		]
	}},
	{ SSpacer:{
		height:2
	}},
	{ SSeekBar:{
		title:"Max CPU Consumption",
		description:"The maximum CPU consumption the daemon will use while scanning. Higher = better scanning (more battery drain).\n",
		unit:" %",
		step:1,
		min:1,
		max:75,
		default:$(cat /sys/kernel/mm/uksm/max_cpu_percentage),
		action:"generic /sys/kernel/mm/uksm/max_cpu_percentage"
	}},
	{ SSpacer:{
		height:2
	}},
	{ SOptionList:{
		title:"FSync",
		description:"Disabling fsync will increase I/O speed but decrease data integrity in the case of an app crash, freeze or reboot.\n",
		default:Y,
		action:"generic /sys/module/sync/parameters/fsync_enabled",
		values:{
			N:"Disabled", Y:"Enabled"
		}
	}},
	{ SSpacer:{
		height:1
	}},
	{ SPane:{
		title:"Virtual Memory",
		description:"Tune the operation of the VM subsystem of the Linux kernel and the writeout of dirty data to disk."
	}},
	{ SSpacer:{
		height:1
	}},
	{ SOptionList:{
		title:"VNSwap (Virtual NAND Swap)",
		description:"VNSwap attempts to improve performance & multitasking by avoiding paging on physical storage, instead using a compressed virtual device in RAM. Paging takes place in RAM until it is necessary to use the swap space on physical storage. Depending on the amount of swap currently in use, disabling can take ~1 minute with Synapse being UNRESPONSIVE during this time. PLEASE WAIT for the process to finish.\n\n Disabling or Enabling will auto set swappiness to 0 or 190 respectively.\n",
		default:Enabled,
		action:"swaps vnswap0",
		values:[Disabled, Enabled,],
		notify:[
			{
				on:APPLY,
				do:[ REFRESH, APPLY ],
				to:"generic /proc/sys/vm/swappiness"
			}
		]
	}},
	{ SSpacer:{
		height:2
	}},
	{ SOptionList:{
		title:"E-Swap",
		description:"Compresses swap pages in a dynamically allocated cache in RAM. Potentially improves I/O speed of swap devices at the cost of CPU to de/compress pages.\n",
		default:0,
		action:"generic /sys/module/exynos_swap/parameters/verify_enable",
		values:{
			0:"Disabled", 1:"Enabled"
		}
	}},
	{ SSpacer:{
		height:2
	}},
	{ SSeekBar:{
		title:"Exynos Swap Memory Pool",
		description:"Exynos Swap memory pool percentage of main memory that may be used as compressed page cache. Default is 50.\n",
		min:0, max:50, unit:" %", step:1,
		default:$(cat /sys/module/exynos_swap/parameters/max_pool_percent),
		action:"generic /sys/module/exynos_swap/parameters/max_pool_percent"
	}},
	{ SSpacer:{
		height:1
	}},
	{ SSeekBar:{
		title:"Swappiness",
		description:"A low value means the kernel will try to avoid swapping as much as possible where a higher value instead will make the kernel aggressively try to use swap space.\n",
		max:200,
		min:0,
		step:10,
		default:$(cat /proc/sys/vm/swappiness),
		action:"generic /proc/sys/vm/swappiness",
	}},
	{ SSpacer:{
		height:1
	}},
	{ SSeekBar:{
		title:"Adaptive Dirty Background Ratio on Suspend / Resume",
		description:"Dirty background memory buffer, more you set, more memory will be used for write buffer for background operations, buffer is released on need to free RAM. The set value is a percentage of total system memory, the number of pages at which the pdflush background writeback daemon will start writing out dirty data.\nDefault: screen ON is 20 & screen OFF is fixed at 10.\n",
		min:0,
		max:100, 
		unit:" %", 
		step:5,
		default:$(cat /proc/sys/vm/dirty_background_ratio),
		action:"generic /proc/sys/vm/dirty_background_ratio"
	}},
	{ SSpacer:{
		height:1
	}},
	{ SSeekBar:{
		title:"Adaptive Dirty Ratio on Suspend / Resume",
		description:"Dirty real time memory buffer, more you set, more memory will be used for write buffer for real time operations, buffer is released on need to free RAM. The set value is a percentage of total system memory, the number of pages at which a process which is generating disk writes will itself start writing out dirty data.\nDefault: screen ON is 40 & screen OFF is fixed at 20.\n",
		min:0,
		max:100,
		unit:" %",
		step:5,
		default:$(cat /proc/sys/vm/dirty_ratio),
		action:"generic /proc/sys/vm/dirty_ratio"
	}},
	{ SSpacer:{
		height:1
	}},
	{ SOptionList:{
		title:"Drop Caches (Clear VFS Cache After Boot)",
		description:"This option will force rebuild of file system cache based on actual app usage rather than boot/startup processes. NOTE: This process can take from 1-2 minutes (Enable for better file system read/write performance).\n",
		default:0,
		action:"dropcaches /res/synapse/Super/dropcaches_prof",
		values:{ 0:"Disabled", 1:"Enabled"
		}
	}},
	{ SSpacer:{
		height:2
	}},
	{ SOptionList:{
		title:"Laptop Mode (Auto FS Writeback Delay Mode)",
		description:"This option will delay the writebacks of file system bits cached in RAM while screen is ON (Enable for better performance @ slight risk of possible data loss if crashed or sudden loss of power).\n",
		default:0,
		action:"generic /proc/sys/vm/laptop_mode",
		values:{ 0:"Disabled", 1:"Enabled"
		}
	}},
	{ SSpacer:{
		height:2
	}},
	{ SSeekBar:{
		title:"Adaptive VFS Cache Pressure on Suspend / Resume",
		description:"Value used to control the tendency of the kernel to reclaim the memory which is used for caching of directory and inode objects. Low values save battery while idle, but may cause stutter with longer up times. Default: screen is ON is 100 & screen OFF is fixed at 20.\n",
		unit:" %",
		step:1,
		min:0,
		max:150,
		default:$(cat /proc/sys/vm/vfs_cache_pressure),
		action:"generic /proc/sys/vm/vfs_cache_pressure"
	}},
	{ SSpacer:{
		height:2
	}},
		`if [ -f "/sys/devices/virtual/block/zram0/disksize" ]; then
		ZRAM=\`$BB cat /sys/devices/virtual/block/zram0/disksize\`;
		ZRAM=$((ZRAM / 1024 / 1024));
		$BB echo '{ SPane:{
			title:"Z-RAM",
			description:"Attempts to increase performance by avoiding paging on physical storage, instead using a compressed virtual device in RAM. Paging takes place in RAM until it is necessary to use the swap space on physical storage."
		}},
			{ SSeekBar:{
				unit:" MB",
				step:10,
				min:0,
				max:2048, 
				default:'$ZRAM',
				action:"zram /sys/devices/virtual/block/zram0/disksize"
			}},'
		fi`
		`if [ -f "/sys/block/zram0/comp_algorithm" ]; then
		CA=\`$BB echo $(/res/synapse/actions/bracket-option /sys/block/zram0/comp_algorithm)\`;
			$BB echo '{ SOptionList:{
				title:"Compression Algorithm",
				description:"Applying a different option will reset Z-RAM. LZ4 algorithm tends to have a faster decompression. More info: <a href='https://code.google.com/p/lz4/'>HERE</a>.",
				default:'$CA',
				action:"zram-bracket-option /sys/block/zram0/comp_algorithm",
				values:['
					for COMPALG in \`$BB cat /sys/block/zram0/comp_algorithm | $BB sed -e "s/\]//;s/\[//"\`; do
						echo "\"$COMPALG\",";
					done;
				$BB echo '],
			}},'
		fi`
		`if [ -f "/sys/block/zram0/max_comp_streams" ]; then
		MCS=\`$BB cat /sys/block/zram0/max_comp_streams\`;
			$BB echo '{ SSeekBar:{
				title:"Max Compression Streams",
				description:"Applying a different option will reset Z-RAM. Can have N write operations (depending on size of streams list) executing in parallel.",
				min:1,	max:10,
				step:1,
				default:'$MCS',
				action:"zram-generic /sys/block/zram0/max_comp_streams",
			}},'
		fi` 
    ]
}
CTAG
